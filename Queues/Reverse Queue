Reverse Queue
You have been given a queue that can store integers as the data. You are required to write a function that reverses the populated queue itself without using any other data structures.

Input Format:
The first list of input contains an integer 't' denoting the number of test cases/queries to be run.
Then the test cases follow.
The first line input for each test case/query contains an integer N, denoting the total number of elements in the queue.
The second line of input contains N integers separated by a single space, representing the order in which the elements are enqueued into the queue.

Output Format:
For each test case/query, the only line of output prints the order in which the queue elements are dequeued, all of them separated by a single space.
Output for every test case/query will be printed on a new line. 

Note:
You are not required to print the expected output explicitly, it has already been taken care of. Just make the changes in the input queue itself.

Constraints:
1 <= t <= 100
1 <= N <= 10^4
-2^31 <= data <= 2^31 - 1
Time Limit: 1sec 

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

import java.util.LinkedList;
import java.util.Queue;

public class Solution {
	public static void reverseQueue(Queue<Integer> input) {
        if(input.isEmpty()){
            return;
        }
        int top = input.poll();  // getting first element
        reverseQueue(input);
        input.add(top);  // adding first element to the last
	}
}
