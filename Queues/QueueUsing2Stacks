import java.util.Queue;
import java.util.Stack;

public class QueueUsingStacks {
    private Stack s1;
    private Stack s2;
    private int size;

    public QueueUsingStacks() {
        s1 = new Stack<Integer>();
        s2 = new Stack<Integer>();
        size = 0;
    }

    public int getSize() {
        return size;
    }

    public boolean isEmpty() {
        return (size == 0);
    }

    public void push(int element) {
        s1.push(element);
        size++;
    }

    public int pop() {
        if(size == 0) {
            return -1;
        }
        while (!s1.isEmpty()) {
            s2.push(s1.pop());
        }
        int ans = (int) s2.pop();
        while (!s2.isEmpty()) {
            s1.push(s2.pop());
        }
        size--;
        return ans;
    }

    public int top() {
        while (!s1.isEmpty()) {
            s2.push(s1.pop());
        }
        int ans = (int)s2.peek();
        while (!s2.isEmpty()) {
            s1.push(s2.pop());
        }
        return ans;
    }
}
