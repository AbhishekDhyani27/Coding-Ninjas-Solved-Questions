Nodes Greater Than X

For a given a binary tree of integers and an integer X, find and return the total number of nodes of the given binary tree which are having data greater than X.

Input Format:
The first line of input will contain the node data, all separated by a single space.
Since -1 is used as an indication whether the left or right node data exist for root, it will not be a part of the node data.
The second line of input contains an integer, denoting the value of X.

Note:
You are not required to print anything explicitly. It has already been taken care of.

Output Format:
The only line of output prints the total number of nodes where the node data is greater than X.

Constraints:
1 <= N <= 10^5
Where N is the total number of nodes in the binary tree.
Time Limit: 1 sec

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

public class Solution {

	public static int countNodesGreaterThanX(BinaryTreeNode<Integer> root, int x) {
		if(root == null) {
                    return 0;
                }
                int count = 0;
                // if root is greater than x then increment count
                if(root.data > x) {
                    count++;
                }

                count += countNodesGreaterThanX(root.left, x);
                count += countNodesGreaterThanX(root.right, x);
                
                return count;
	}
}
