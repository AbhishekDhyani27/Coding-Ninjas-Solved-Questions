public class Node {
    Node left, right;
    int data;

    public Node(int data) {
        this.data = data;
    }
}


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

import java.util.Scanner;

public class TreeUse1 {
    static Scanner sc = null;

    public static Node takeInput() {
        Node root = null;
        System.out.println("Enter data: ");
        int data = sc.nextInt();

        if(data == -1) {
            return null;
        }
        root = new Node(data);  // creating root node
        System.out.println("Enter the left for: "+data);
        root.left = takeInput();

        System.out.println("Enter the right for: "+data);
        root.right = takeInput();

        return root;
    }

    public static void inOrder(Node root) {
        if(root == null) {
            return;
        }
        inOrder(root.left);
        System.out.print(root.data+" ");
        inOrder(root.right);
    }

    public static void preOrder(Node root) {
        if(root == null) {
            return;
        }
        System.out.print(root.data+" ");
        preOrder(root.left);
        preOrder(root.right);
    }

    public static void postOrder(Node root) {
        if(root == null) {
            return;
        }
        postOrder(root.left);
        postOrder(root.right);
        System.out.print(root.data+" ");
    }

    public static void main(String[] args) {
        sc = new Scanner(System.in);
        Node root = takeInput();

        inOrder(root);
        System.out.println();
        preOrder(root);
        System.out.println();
        postOrder(root);
    }
}
