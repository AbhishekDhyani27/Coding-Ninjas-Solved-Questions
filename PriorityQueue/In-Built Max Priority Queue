//1ST METHOD

import java.util.Comparator;
import java.util.PriorityQueue;

class MaxPQComparator implements Comparator<Integer> {

    @Override
    public int compare(Integer o1, Integer o2) {
        if(o1 < o2) {
            return 1;
        }
        else if (o1 > o2) {
            return -1;
        }
        return 0;
    }
}

public class Priority_Queue {
   public static void main(String[] args) {
        MaxPQComparator max = new MaxPQComparator();
        PriorityQueue<Integer> pq = new PriorityQueue<>(max);
        
   }
}

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

//2ND METHOD

import java.util.Collections;
import java.util.PriorityQueue;

public class Priority_Queue {
   public static void main(String[] args) {
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());  // this Collections method will reverse the initial implementation of minPriorityQueue
        
   }
}
